---
event: road_map
question: |
  Review your answers
subquestion: |
  Click a section to revisit the answers from that section.

  % for section in section_links(nav):
  * ${section}
  % endfor
  
  Press "${word("Resume")}" to resume the
  interview.
buttons:
  ${word("Resume")}: continue
---
event: review_about_you
question: |
  About You
subquestion: |   
  So far, you have provided the following information about yourself.
review: 
  - Update name: tenant.name.first
    button: |
      You said your name was ${tenant.name}
  - Update name on Summons: 
    - tenant.name_different_on_summons
    - recompute:
      - downloads      
      - downloads_pdf
      - downloads_docx
      - downloads_concat
      - num_downloads
      - download_titles_temp
      - download_titles
    button: |
      You said your name 
      ${ 'was' if tenant.name_different_on_summons else 'was not'}
      different on the Summons and Complaint.
  - Additional people who will use this form: additional_tenants.there_are_any
    button: |
      % if additional_tenants.there_are_any:
      You said there are additional tenants.

      % for t in additional_tenants:
      * ${t} ${action_button_html(url_action(t.name.first)) }
      % endfor
      % endif
  - Update motion to intervene:
    - request_right_to_intervene
    button: |
      You said that you ${'do' if request_right_to_intervene else 'do not'}
      want to request permission to intervene in the case.
  - Update address: tenant.address.address
    button: |
      You said your address was ${tenant.address.block()}
--- 
need: additional_tenants.table
event: review_signature
question: |
  Review your signature
review:  
  - Edit your signature: tenant.signature
    button: |
      This is your signature: ${ tenant.signature}
  - note: |
      #### Edit additional signatures
      
      ${ additional_tenants.table }
    show if: len(additional_tenants)
---
event: additional_tenants.edit_table
question: |
  Additional tenant signatures
---
table: additional_tenants.table
rows: additional_tenants
columns:
  - Name: row_item
  - Signature: row_item.signature
edit:
  - signature
---
event: review_about_landlord
question: |
  About your landlord
subquestion: |
  So far, you have provided the following information about your landlord.
review:
  - Update name: landlord.name.text
    button: |
      You said your landlord's name was ${landlord.name}.
  - Update landlord type: landlord.organization_type
    button: |
      You said the type of landlord you have is ${landlord.organization_type}.
  - Update attorney: landlord.has_attorney
    button: |
      You said your landlord
      % if landlord.has_attorney:
      does have an attorney. You said the attorney's name was
      ${ landlords_attorney } and address was ${ landlords_attorney.address.on_one_line() }.
      % else:
      does not have an attorney.
      % endif
---
event: review_about_court
question: |
  About your court case
subquestion: |
  So far, you have provided the following information about your court and hearing date.
review:
  - Update jury claim: claim_jurytrial
    button: |
      You said that you ${'do' if claim_jurytrial else 'do not'}
      want to claim your right to a jury trial.
  - Update court: 
      - court
      - recompute:
        - court_is_housing_court
    button: |
      You said your case was originally scheduled for ${court} in 
      ${court.address.county}.
  - Update transfer: 
      - transfer_to_housing_court
      - transfer_court_name
    button: |
      You said you ${ 'wanted' if transfer_to_housing_court else 'did not want'}
      to transfer your case to the ${transfer_court_name}.
  - Update court date: 
      - case.original_date
      - case.answer_date
      - recompute:
        - case.on_time
        - case.rescheduled_date
        - date_discovery_due
        - date_discovery_received
        - date_motion_to_compel_due
        - court_date
    button: |
      You said your case was originally scheduled to be heard on ${ case.original_date }
      with an answer date of ${ case.answer_date }.
      
      % if case.on_time:
      If correct, this makes your rescheduled court date ${ case.rescheduled_date }
      % endif
  - Update timing of notices:
      - date_received_ntq
      - date_received_summons
      - summons_in_hand
      - summons_mailed
      - summons_last_and_usual
      - recompute:
        - initial_defense.defective_summons
        - initial_defense.premature_commencement
    button: |
      You said you received the notice to quit on ${ date_received_ntq} and the
      summons and complaint on ${ date_received_summons }.
      The summons ${ 'was' if summons_in_hand else 'was not'} served to you in hand.
      You ${'did' if summons_mailed else 'did not'} receive the summons by mail.
      You ${'did' if summons_last_and_usual else 'did not'} receive a copy left at your house.
  - label: Update content of notices
    fields:
      - ntq_matches_summons
      - eviction_all_reasons
      - follow up:
        - fault_basis
        - nofault_basis
      - recompute:
        - eviction_reason
        - eviction_detailed_reason
        - initial_defense.defective_summons
    button: |
      You received a ${ notice_type } notice to quit.
    
      You said the reasons given for your eviction on the Notice to Quit 
      were '${ eviction_detailed_reason }'.
      
      You said that the Summons and Complaint ${ 'did' if ntq_matches_summons else 'did not'}
      match the Notice to Quit.
  - Update reason for more time:
    - needs_time_because
    button: |
      You said you need more time because: ${needs_time_because}.
  - Update delivery date and method:
      - service_date
      - method_of_service
    button: |
      You said you will deliver the paperwork on ${service_date} by ${method_of_service}      
---
event: review_about_tenancy
question: About your tenancy
subquestion: |
  So far, you have provided the following information about your tenancy.
review:
  - Update tenancy facts:
      - facts.tenant_movein
      - is_pca
      - facts.tenant_rent_share
    button: |
      You said you moved in on ${ facts.tenant_movein}.
      
      You ${'are' if is_pca else 'are not'} a PCA or Superintendent.
      
      You pay ${currency(facts.tenant_rent_share)} in rent 
      each ${ facts.tenant_rent_frequency }.
      
      % if defined('facts.tenant_contract_rent'):
      The total rent your landlord receives is ${facts.tenant_contract_rent}.
      % endif
      
      Your rental agreement type is ${tenancy_type}.
      
      % if defined('lease_type'):
      Your lease type is ${lease_type}.
      % endif
  - Update public housing: facts.tenant_has_subsidy
    button: |
      You said that you ${ 'do' if facts.tenant_has_subsidy else 'do not'} have a
      rental subsidy.
  - Update subsidy type: 
      - subsidy_type
    button: |
       The type of subsidy you said you have is ${ subsidy_type }.
  - Update information about you:
      - tenant.is_nonnativespeaker
      - tenant.is_disabled
      - tenant.is_under6
      - tenant.is_over60
      - tenant.is_dvvictim
    button: |
      You said that you ${'are not' if tenant.is_nonnativespeaker else 'are'} 
      a native English speaker.
       
      You said you ${'are' if tenant.is_disabled else 'are not'} disabled.
      
      You said you ${'do' if tenant.is_under6 else 'do not'} have a household
      member under the age of 6.
       
      You said that you ${'do' if tenant.is_over60 else 'do not'} have a household 
      member over the age of 60.
       
      You said that you ${'are' if tenant.is_dvvictim else 'are not'} a survivor
      of domestic violence.
---
event: review_claims
question: |
  Review Claims and Defenses
subquestion: |
  So far you have selected the following claims and defenses.
review:
  - Update retaliation:
    - retaliation.is_retaliated
    button: |
      You said that your landlord ${ 'is' if retaliation.is_retaliated else 'is not'}
      retaliating against you.
  - Update basis of retaliation:
    - retaliation.withheld_rent
    - retaliation.badconditions_to_landlord
    - retaliation.badconditions_to_agency
    - retaliation.tenant_union
    - retaliation.brought_claim
    - retaliation.protection_or_prevention_order
    - retaliation.domestic_violence
    - retaliation.survivor_rights
    - retaliation.within_6_months
    button: |
      Specifically, you said the retaliation included:
      
      * Withheld rent due to bad conditions: ${ retaliation.withheld_rent }
      * Reported bad conditions to a public agency: ${retaliation.badconditions_to_agency}
      * Reported bad conditions to landlord: ${ retaliation.badconditions_to_landlord }
      * Brought a claim against landlord: ${ retaliation.brought_claim }
      * Tried to get protection related to domestic violence: ${ retaliation.domestic_violence}
      % if defined('retaliation.other'):
      * Other: ${retaliation.other}
      % endif
      * Participated in a tenant's union: ${ retaliation.tenant_union }
        
      You said the retaliation ${ 'did' if retaliation.within_6_months else 'did not'} occur in the last 6 months.
  - Update discrimination:
    - tenant.is_discriminated
    - recompute:
      - discrimination.protected_classes
    button: |
      You said that you ${ 'were' if tenant.is_discriminated else 'were not'} 
      discriminated against by your landlord.
      
      You said you were discriminated against because of ${ discrimination.protected_classes.true_values() }.
  - Update sexual harassment:
    - claims.harassment
    - recompute:
      - discrimination.sexual_harassment.pressured_sexual_favors
    button: |
      You said that you ${'have' if claims.harassment else 'have not'}
      been sexually harassed by your landlord or their employee.
      
      % if claims.harassment:
      In detail, you said:
      
      * You ${ 'were' if discrimination.sexual_harassment.pressured_sexual_favors else 'were not'} 
      pressured for sexual favors.
      * You ${'did' if discrimination.sexual_harassment.tenancy_terms_changed else 'did not' } 
      have your tenancy terms changed.
      * The harassment ${'did' if discrimination.sexual_harassment.unsafe_or_uncomfortable else 'did not'} 
      make you feel unsafe or uncomfortable.
      % endif
  - Update bad conditions: 
    - bad_conditions.conditions
    - recompute:
      - bad_conditions.have_conditions
      - bad_conditions.landlord_notified
    button: |
      You said that you ${'did' if bad_conditions.have_conditions else 'did not'} have any bad housing conditions in the last 6 years.
      % if bad_conditions.have_conditions:
      Specifically, the bad conditions included ${ bad_conditions.conditions.true_values() }.
      % if defined("bad_conditions.conditions['other']") and bad_conditions.conditions['other']:      
      You also said you had the other bad condition: ${ bad_conditions.other_condition }.
      % endif
      
      %if defined('bad_conditions.landlord_notified'):
      Your landlord learned about the problem because: ${bad_conditions.landlord_notified.true_values()}.
      %endif
      
      % endif
  - Update repair and deduct: 
    - other.tenant_repaired
    - recompute:
      - other.repair_and_deduct_statute
    button: |
      You said that you ${'did' if other.tenant_repaired else 'did not'} make
      your own repairs to the apartment.
      
      It looks like you ${'may' if other.repair_and_deduct_statute else 'may not'}
      qualify for a defense based on this.
      
  - Update Security Deposit: paid_deposit
    button: |
      You said you ${'paid' if paid_deposit else 'did not pay'}
      a security deposit.
  - Update Security Deposit violations:
    - security_deposit.amount
    - security_deposit.violations
    - recompute:
      - security_deposit.violated
    button: |
      The amount you say you paid as a deposit was ${ security_deposit.amount}.
      The violations included ${ security_deposit.violations.true_values()}.
  - Update Pre-paid Last Month's Rent: paid_lmr
    button: |
      You said you ${ 'did' if paid_lmr else 'did not'} pre-pay last month's rent.
  - label: Update condo conversion
    fields:
      - is_condo_conversion
      - follow up:
        - more_than_3_units
    button: |
      You said that your apartment ${'is' if is_condo_conversion else 'is not'} being 
      converted to a condo or coop was recently converted to a condo or coop.
      
      % if is_condo_conversion:
        Specific violations included:
        
      % if defined('condo_violations') and condo_violations.any_true():
      % for violation in condo_violations.true_values():
      * ${violation}
      % endfor
      % endif
      %if defined('condo_local_violations') and condo_local_violations.any_true():
      % for violation in condo_local_violations.true_values():
      * ${ violation }
      % endfor
      % endif
        
      % endif
  - Update Pre-paid Last Month's Rent:
    - last_months_rent.amount
    - recompute:
      - last_months_rent.violated
    button: |
      You said that you pre-paid last month's rent of ${ last_months_rent.amount }
      and that your landlord ${'failed to pay' if last_months_rent.violated else 'paid'}
      you interest on the anniversary of your payment.
  - Update DTA payment: other.vendor_payments
    button: |
      You said that DTA ${'does' if other.vendor_payments else 'does not'} pay your 
      rent on your behalf.
  - Update Quiet Enjoyment: 
    - bqe.violated
    button: |
      You said that your quiet enjoyment of the premises 
      ${ 'was' if bqe.violated else 'was not' }
      violated by your landlord.
  - Update basis of Quiet Enjoyment:
    - bqe.bad_conditions
    button: |
      Specifically, you said your landlord allowed or caused:
      
      * Bad conditions: ${ bqe.bad_conditions }
      * Entered your home without permission: ${ bqe.entered_without_permission}
      * No heat: ${ bqe.heat}
      * No hot water: ${ bqe.hot_water}
      * Locked you out: ${ bqe.locked_out}
      * Removed possessions: ${ bqe.removed_possessions}
      * Other: ${ bqe.other if defined('bqe.other') else ''}
  - Update utilities: claims.utilities
    button: | 
      You said you ${ 'did' if claims.utilities else 'did not'} pay for utilities.
      % if claims.utilities:
      Specifically, your landlord:
      
      * Billed for utilities with no written agreement: ${ bqe.billed_no_agreement}
      * Billed for others utilities: ${ bqe.billed_for_others}
      * Shutoff utilities: ${ bqe.shutoff_utilities}
      * Failed to pay utilities: ${ bqe.unpaid_utilities }
      % endif
  - Update subsidized housing defenses: 
    - subsidized_housing.stopped_payment
    - subsidized_housing.pha_pays_rent
    - subsidized_housing.improper_rent_calculation
    - subsidized_housing.landlord_overcharged
    button: |
      You said that a housing authority 
      ${ 'does' if subsidized_housing.pha_pays_rent else 'does not'} 
      pay rent to the landlord.

      You said that your housing authority 
      ${'did' if subsidized_housing.stopped_payment else 'did not'}
      stop payment to the landlord.
      
      You said that the landlord or housing authority
      ${ 'did' if subsidized_housing.improper_rent_calculation else 'did not'}
      make a mistake in setting your rent share.
      
      You said that the landlord 
      ${ 'did'  if subsidized_housing.landlord_overcharged else 'did not'}
      overcharge you for rent.
  - Update Consumer Protection: 
    - consumer_protection.late_fees
    - consumer_protection.nonagreed_rent
    - consumer_protection.unlawful_court_fees 
    - consumer_protection.unlawful_lease_terms
    - consumer_protection.other 
    button: |
      You are claiming the consumer protection law.
      Specifically, you are claiming your landlord acted in the following
      unfair and deceptive ways:
      
      * Unlawful late fees: ${ consumer_protection.late_fees }
      * Charged a rent you didn't accept: ${ consumer_protection.nonagreed_rent}
      * Charged unlawful court fees: ${ consumer_protection.unlawful_court_fees }
      * Used unlawful terms in the lease: ${ consumer_protection.unlawful_lease_terms}
      * Other: ${ consumer_protection.other }
      
---
event: review_discovery
question: Review Discovery
subquestion: |
  You provided the following information about discovery so far.

#skip undefined: False
review:
  - label: Edit
    field: tenant_review_discovery
    button: |
      You ${ 'wanted' if tenant_review_discovery else 'did not want'} to 
      customize the discovery.
  - label: Edit
    field: interrogatory_questions
    button: |
      ${ ints.count_checked() } interrogatories are already selected.
  - label: Edit
    field: drq_questions
    button: |
      You requested ${ drq.count_checked() } kinds of documents.
---
event: review_everything
question: |
  Edit your answers
subquestion: |
  Below is a list of all of your answers so far in this interview.

  Click the "edit" button to change your response.
review:
  - note: |
      <h2 class="h4">About you</h2>
  - Edit: person_answering
    button: |
      Who is completing this interview?
       : ${ person_answering }
  - Edit: representation_type
    button: |
      Representation type : ${ representation_type }
  - Edit: tenants_attorney.name.first
    button: |
      Tenant's attorney's name: ${ tenants_attorney }  
      BBO Number : ${ tenants_attorney.bbo }  
      Email : ${ tenants_attorney.email }  
      Phone number : ${ tenants_attorney.phone_number }  
      Fax number : ${ tenants_attorney.fax_number }  
      Office name (type or select from list) : ${ tenants_attorney.office }

      Address: ${ tenants_attorney.address.on_one_line() }
  - Edit: tenant.name.first
    button: |
      Tenant's name : ${ tenant }
  - Edit: additional_tenants.there_are_any
    button: |
      Additional tenants
       : ${ word(yesno(additional_tenants.there_are_any)) }
  - Edit: additional_tenants.revisit
    button: |
      Additional tenant names: ${ additional_tenants }
  - Edit: tenant.name_different_on_summons
    button: |
      Does the line "To Defendants / Tenants / Occupants" contains something in addition to or other than "${comma_and_list(additional_tenants + [tenant])}"? : ${ tenant.name_different_on_summons }
  - Edit: tenant.more_names_on_summons
    button: |
      There are additional names listed. : ${ word(yesno(tenant.more_names_on_summons)) }
  - Edit: tenant.name_misspelled
    button: |
      My name is misspelled on the summons. : ${ word(yesno(tenant.name_misspelled)) }
  - Edit: tenant.not_named_on_summons
    button: |
      My name is missing from the summons. : ${ word(yesno(tenant.not_named_on_summons)) }
  - Edit: defendant_name_as_listed_on_summons
    button: |
      Exact contents of the line "To Defendants / Tenants / Occupants" : ${ defendant_name_as_listed_on_summons }
  - Edit: tenant.address.address
    button: |
      Your address : ${ tenant.address.on_one_line() }
  - Edit: remind_user
    button: |
      Remind me about deadlines : ${ word(yesno(remind_user)) }
  - Edit: survey_user
    button: |
      Send me a survey after my first court date. : ${ word(yesno(survey_user)) }
  - Edit: edit_contact_info
    button: |
      Contact information for reminders: 
      % if edit_contact_info:
      Mobile phone number for text messaging : ${ user_cell_edited }
      Email address : ${ user_email_edited }
      % endif
  - Edit: tenant.phone_number
    button: |
      Phone number : ${ tenant.phone_number }
  - Edit: tenant.email
    button: |
      Email address : ${ tenant.email }
  - Edit: facts.tenant_address_is_eviction_address
    button: |
      This is also the address I am being evicted from : ${ facts.tenant_address_is_eviction_address }
  - Edit: premises_alternate_address
    button: |
      What address are you being evicted from? (all on one line) : ${ premises_alternate_address }

  - note: |
      <h2 class="h4 mt-4">About your landlord</h2>
  - Edit: landlord.name.text
    button: |
      Landlord's name (as written on the Summons) : ${ landlord.name.text }
  - Edit: landlord.organization_type
    button: |
      What type of landlord do you have? : ${ landlord.organization_type }
  - Edit: landlord.is_new
    button: |
      My landlord has changed since I first moved in. : ${ word(yesno(landlord.is_new)) }
  - Edit: landlord.has_attorney
    button: |
      My landlord has an attorney. : ${ landlord.has_attorney }
  - Edit: landlords_attorney.name.text
    button: |
      Attorney's name : ${ landlords_attorney.name.text }
  - Edit: landlords_attorney.address.address
    button: |
      Landlord's attorney's address: ${ landlords_attorney.address.on_one_line() }
  - Edit: landlord.address.address
    button: |
      Landlord's address: 
      ${ landlord.address.on_one_line() }

  - note: |
      <h2 class="h4 mt-4">About your court case</h2>
  - Edit: case.status
    button: |
      Your eviction case status : ${ case.status }
  - Edit: claim_jurytrial
    button: |
      Your right to a jury trial: ${ claim_jurytrial }      
  - Edit: case.covid_hearing_date_assigned
    button: |
      Did you get a letter from the court that tells you what **day and time** to go to court yet? : ${ case.covid_hearing_date_assigned }
  - Edit: case.covid_first_event
    button: |
      When do you need to go to court? : ${ case.covid_first_event }
  - Edit: court
    button: |
      Court name : ${ court }
  - Edit: transfer_to_housing_court
    button: |
      Transfer to Housing Court
       : ${ transfer_to_housing_court }
  - Edit: request_right_to_intervene
    button: |
      Would you like to ask permission to participate in this case? : ${ request_right_to_intervene }
  - Edit: intervention_reason
    button: |
      Briefly explain why you should be allowed to participate: : ${ intervention_reason }
  - Edit: intervention_harm
    button: |
      Briefly explain why you would be harmed if you are not allowed to participate: : ${ intervention_harm }

  - note: |
      <h2 class="h4 mt-4">About your tenancy</h2>
  - Edit: facts.tenant_movein
    button: |
      When did you move in? (best date you know) : ${ facts.tenant_movein }
  - Edit: is_pca
    button: |
      I live in the property as a caretaker (PCA, handyman, or Superintendent) and do not pay rent. : ${ word(yesno(is_pca)) }
  - Edit: facts.tenant_rent_share
    button: |
      What do you pay for rent? : ${ facts.tenant_rent_share }
  - Edit: facts.tenant_rent_frequency
    button: |
      How often is your rent paid? : ${ facts.tenant_rent_frequency }
  - Edit: facts.tenant_contract_rent
    button: |
      What is the full "contract" or "market" rent? : ${ currency(facts.tenant_contract_rent) }
  - Edit: tenancy_type
    button: |
      My rental agreement is : ${ tenancy_type }
  - Edit: lease_type
    button: |
      When the original lease period is over (usually 1 year), my lease ... : ${ lease_type }
  - Edit: lease_end_date
    button: |
      Date my lease ends : ${ lease_end_date }
  - Edit: facts.tenant_has_subsidy
    button: |
      I live in public housing, have a housing voucher, or my rent is subsidized. : ${ word(yesno(facts.tenant_has_subsidy)) }
  - Edit: tenant.is_nonnativespeaker
    button: |
      English is not my first language. : ${ word(yesno(tenant.is_nonnativespeaker)) }
  - Edit: tenant.needs_interpreter
    button: |
      I need an interpreter. : ${ word(yesno(tenant.needs_interpreter)) }
  - Edit: tenant.preferred_language
    button: |
      I need an interpreter who speaks: : ${ tenant.preferred_language }
  - Edit: tenant.is_disabled
    button: |
      I or someone who lives with me has a disability : ${ word(yesno(tenant.is_disabled)) }
  - Edit: tenant.is_under6
    button: |
      I or someone who lives with me is under the age of 6 : ${ word(yesno(tenant.is_under6)) }
  - Edit: tenant.is_over60
    button: |
      I or someone who lives with me is over the age of 60 : ${ word(yesno(tenant.is_over60)) }
  - Edit: tenant.is_dvvictim
    button: |
      I am a survivor of domestic violence. : ${ word(yesno(tenant.is_dvvictim)) }
  - Edit: postforeclosure.is_foreclosed
    button: |
      ${tenant.address.address} has been foreclosed on. : ${ word(yesno(postforeclosure.is_foreclosed)) }
  - Edit: is_pfc_owner
    button: |
      I am or I was the owner before the foreclosure. : ${ word(yesno(is_pfc_owner)) }

  - note: |
      <h2 class="h4 mt-4">Claims and defenses</h2>
  - Edit: eviction_all_reasons
    button: |
      Choose all reasons listed on your Notice to Quit that apply. : ${ eviction_all_reasons }
  - Edit: nofault_basis
    button: |
      Select all that apply : ${ nofault_basis.true_values() }
  - Edit: fault_basis
    button: |
      Select all that apply : ${ fault_basis.true_values() }
  - Edit: dont_owe_rent
    button: |
      I do not owe the amount of money my landlord says I owe. : ${ word(yesno(dont_owe_rent)) }
  - Edit: behind_in_rent
    button: |
      I was behind in rent when I got the 14-day notice. : ${ behind_in_rent }
  - Edit: refused_rent_increase
    button: |
      I never agreed to pay the amount of rent the landlord put in the 14-day notice : ${ word(yesno(refused_rent_increase)) }
  - Edit: attempted_full_cure
    button: |
      I gave the landlord the full amount of money I owed. : ${ word(yesno(attempted_full_cure)) }
  - Edit: attempted_offered_cure
    button: |
      I offered to pay the full amount of money I owed. : ${ word(yesno(attempted_offered_cure)) }
  - Edit: other.vendor_payments
    button: |
      My rent is paid by the Department of Transitional Assistance, and DTA failed to make the payments at no fault of my own. : ${ word(yesno(other.vendor_payments)) }
  - Edit: fault.did_not_occur
    button: |
      I deny the landlord's allegation of ${eviction_detailed_reason}. (My landlord is wrong) : ${ word(yesno(fault.did_not_occur)) }
  - Edit: fault.not_violation_of_agreement
    button: |
      The ${capitalize(eviction_detailed_reason)} is not a violation of my lease. : ${ word(yesno(fault.not_violation_of_agreement)) }
  - Edit: fault.no_control_of_guest
    button: |
      The ${eviction_detailed_reason} was the fault of a guest that I had no control over. : ${ word(yesno(fault.no_control_of_guest)) }
  - Edit: notice_type
    button: |
      Kind of notice to quit : ${ notice_type }
  - Edit: ntq_includes_tenant_name
    button: |
      The notice to quit has my name on it. : ${ ntq_includes_tenant_name }
  - Edit: ntq_includes_all_tenants
    button: |
      The notice to quit includes the names of everyone who signed the lease. : ${ ntq_includes_all_tenants }
  - Edit: ntq_includes_correct_address
    button: |
      The notice to quit has my correct address. : ${ ntq_includes_correct_address }
  - Edit: lease_requires_30_day_notice
    button: |
      My lease requires a 30-day notice even for non-payment of rent. : ${ word(yesno(lease_requires_30_day_notice)) }
  - Edit: ntq_leaves_off_required_language
    button: |
      The notice to quit leaves out language that is required by my lease, by law, or by the requirements of a subsidy program. : ${ word(yesno(ntq_leaves_off_required_language)) }
  - Edit: post_ntq_waiver
    button: |
      Did any of the following happen after you got the notice to quit${' on ' + format_date(date_received_ntq) if (defined('date_received_ntq') and date_received_ntq != '') else ''}? : ${ post_ntq_waiver }
  - Edit: ntq_contains_reservation
    button: |
      Does the notice to quit say "rent will be accepted for use and occupancy only" or similar language? : ${ ntq_contains_reservation }
  - Edit: ntq_matches_summons
    button: |
      It matches the notice to quit. : ${ ntq_matches_summons }
  - Edit: summons_eviction_reasons
    button: |
      Select all reasons listed on the summons and complaint that are not listed on the notice to quit. : ${ summons_eviction_reasons }
  - Edit: summons_includes_all_tenants
    button: |
      The summons and complaint includes the names of all adult tenants who signed the lease. : ${ summons_includes_all_tenants }
  - Edit: summons_includes_correct_address
    button: |
      The summons and complaint has my correct address. : ${ summons_includes_correct_address }
  - Edit: date_received_ntq
    button: |
      Date I got the notice to quit : ${ date_received_ntq }
  - Edit: date_received_ntq
    button: |
      Date I got the notice to quit : ${ date_received_ntq }
  - Edit: date_received_summons
    button: |
      Date I got the notice to go to court (Summons and Complaint). : ${ date_received_summons }
  - Edit: summons_in_hand
    button: |
      I got the summons and complaint by someone handing it to me or an adult in my household. : ${ word(yesno(summons_in_hand)) }
  - Edit: summons_mailed
    button: |
      The summons and complaint was mailed to me. : ${ word(yesno(summons_mailed)) }
  - Edit: summons_last_and_usual
    button: |
      The summons and complaint was left at my apartment (usually taped or tacked on door) : ${ word(yesno(summons_last_and_usual)) }
  - Edit: paid_rent_owed
    button: |
      I paid all of the rent that I owed my landlord, or I offered to pay it and they refused to accept it. : ${ word(yesno(paid_rent_owed)) }
  - Edit: paid_court_fees
    button: |
      I also paid the court costs (typically between $180-$200). : ${ word(yesno(paid_court_fees)) }
  - Edit: no_ntq_in_12_months
    button: |
      In the last twelve months, this was the first or only time I received a notice to quit. : ${ word(yesno(no_ntq_in_12_months)) }
  - Edit: cure_date
    button: |
      The date I paid my landlord was : ${ cure_date }
  - Edit: new_landlord_reason
    button: |
      Why do you have a new landlord? : ${ new_landlord_reason }
  - Edit: building_sold_after_ntq
    button: |
      The building was sold after I got the notice to quit : ${ word(yesno(building_sold_after_ntq)) }
  - Edit: initial_defense.custom_reason_for_dismissal
    button: |
      The Landlord's case should be dismissed because : ${ initial_defense.custom_reason_for_dismissal }
  - Edit: initial_defense.custom_other
    button: |
      I have other defenses or counterclaims as follows : ${ initial_defense.custom_other }
  - Edit: more_than_3_units
    button: |
      My apartment building has more than 3 units. : ${ word(yesno(more_than_3_units)) }
  - Edit: condo_violations
    button: |
      My landlord failed to follow state condo conversion law as follows : ${ condo_violations }
  - Edit: condo_local_violations
    button: |
      My landlord failed to follow local condo conversion ordinances as follows : ${ condo_local_violations }
  - Edit: bad_conditions.conditions
    button: |
      Select any conditions you have had in the last 6 years, even if fixed now : ${ bad_conditions.conditions }
  - Edit: bad_conditions.other_condition
    button: |
      Other conditions : ${ bad_conditions.other_condition }
  - Edit: other.tenant_repaired
    button: |
      I paid for repairs to the bad conditions at my own cost. : ${ word(yesno(other.tenant_repaired)) }
  - Edit: other.certified_report
    button: |
      Before I made repairs, the Board of Health or Inspectional Services Division gave the landlord a certified report about bad housing conditions. : ${ word(yesno(other.certified_report)) }
  - Edit: other.no_timely_repairs
    button: |
      The landlord did not make or contract to make the repairs that they were ordered to make in a reasonable amount of time (14 days, or less if ordered by ISD or Board of Health). : ${ word(yesno(other.no_timely_repairs)) }
  - Edit: other.deducted_repair_cost
    button: |
      I deducted the cost of repairs from my rent. : ${ word(yesno(other.deducted_repair_cost)) }
  - Edit: other.repair_less_than_4_months
    button: |
      The total amount I deducted for repairs was less than four months of rent. : ${ word(yesno(other.repair_less_than_4_months)) }
  - Edit: bad_conditions.landlord_notified
    button: |
      How did you tell your landlord about the bad housing conditions? : ${ bad_conditions.landlord_notified }
  - Edit: bad_conditions.other
    button: |
      Other : ${ bad_conditions.other }
  - Edit: bqe.heat
    button: |
      Failed to provide adequate heat : ${ word(yesno(bqe.heat)) }
  - Edit: bqe.hot_water
    button: |
      Failed to provide adequate hot water : ${ word(yesno(bqe.hot_water)) }
  - Edit: bqe.unpaid_utilities
    button: |
      Did not pay for utilities that were the landlord's responsibility : ${ word(yesno(bqe.unpaid_utilities)) }
  - Edit: bqe.shutoff_utilities
    button: |
      Shut off my utilities : ${ word(yesno(bqe.shutoff_utilities)) }
  - Edit: bqe.locked_out
    button: |
      Locked me out of my home : ${ word(yesno(bqe.locked_out)) }
  - Edit: bqe.removed_possessions
    button: |
      Took my belongings out of my apartment without a court order : ${ word(yesno(bqe.removed_possessions)) }
  - Edit: bqe.bad_conditions
    button: |
      Allowed bad conditions to exist in my home : ${ word(yesno(bqe.bad_conditions)) }
  - Edit: bqe.entered_without_permission
    button: |
      Entered my home without permission or notice : ${ word(yesno(bqe.entered_without_permission)) }
  - Edit: bqe.other
    button: |
      Interfered in some other way (specify) : ${ bqe.other }
  - Edit: bqe.billed_no_agreement
    button: |
      I have been billed for heat, hot water, electricity or gas without an agreement in writing. : ${ word(yesno(bqe.billed_no_agreement)) }
  - Edit: bqe.billed_for_others
    button: |
      I have been billed for one or more utilities that cover the common area or other people's apartments (cross metering or cross wiring). : ${ word(yesno(bqe.billed_for_others)) }
  - Edit: other.water_violation
    button: |
      My landlord charged me for water in violation of G.L. c. 186, §22.. : ${ word(yesno(other.water_violation)) }
  - Edit: postforeclosure.failure_to_comply
    button: |
      The foreclosure is void due to violations of the power of sale in the mortgage; statutory or regulatory foreclosure requirements; or requirements for note holding or transfer requirements. : ${ word(yesno(postforeclosure.failure_to_comply)) }
  - Edit: postforeclosure.unfair_loan_mod
    button: |
      I was treated unfairly with respect to loan modification and/or alternatives to foreclosure. : ${ word(yesno(postforeclosure.unfair_loan_mod)) }
  - Edit: postforeclosure.unfair_notices
    button: |
      I was treated unfairly with respect to pre-foreclosure notices. : ${ word(yesno(postforeclosure.unfair_notices)) }
  - Edit: postforeclosure.unfair_loan_based_on_income
    button: |
      My loan was predatory, unfair, and/or was unaffordable based on my income. : ${ word(yesno(postforeclosure.unfair_loan_based_on_income)) }
  - Edit: postforeclosure.no_just_cause.bona_fide_protections
    button: |
      I am a bona fide tenant entitled to the protections of G.L. c. 186A. : ${ word(yesno(postforeclosure.no_just_cause.bona_fide_protections)) }
  - Edit: postforeclosure.no_just_cause.no_binding_purchase
    button: |
      Because the plaintiff does not have just cause to evict me and there is no binding purchase and sale agreement on the property as required by G.L. c. 186A, §2, this case should be dismissed. : ${ word(yesno(postforeclosure.no_just_cause.no_binding_purchase)) }
  - Edit: postforeclosure.no_just_cause.ntq_or_other_actions
    button: |
      The plaintiff's service of a Notice to Quit or other actions to force me to vacate the premises without just cause or without a contract for sale on the property violate G.L. c. 186A, §2; c. 186, §14; and c. 93A. : ${ word(yesno(postforeclosure.no_just_cause.ntq_or_other_actions)) }
  - Edit: postforeclosure.notice_provisions.no_plaintiff_info
    button: |
      The plaintiff failed to post, deliver, or slide under my door a notice containing contact information and information about who to call for repairs. : ${ word(yesno(postforeclosure.notice_provisions.no_plaintiff_info)) }
  - Edit: postforeclosure.notice_provisions.less_than_30_days
    button: |
      The plaintiff served me with a Notice to Quit less than 30 days after it posted and delivered the required contact information in violation of G.L. c. 186A, §§3 and 4. : ${ word(yesno(postforeclosure.notice_provisions.less_than_30_days)) }
  - Edit: postforeclosure.notice_provisions.no_right_to_court_notice
    button: |
      The plaintiff did not provide me with a written notice about my right to a court hearing in violation of G.L. c. 186A, §§3 and 4. : ${ word(yesno(postforeclosure.notice_provisions.no_right_to_court_notice)) }
  - Edit: postforeclosure.notice_provisions.no_written_notice_of_violations
    button: |
      The plaintiff did not give me written notice claiming that I had substantially violated my lease or tenancy in violation of G.L. c. 186A, §4. : ${ word(yesno(postforeclosure.notice_provisions.no_written_notice_of_violations)) }
  - Edit: postforeclosure.notice_provisions.no_30_days_to_cure_claims
    button: |
      The plaintiff did not give me 30 days to cure the claim that I substantially violated my lease or tenancy in violation of G.L. c. 186A, §4. : ${ word(yesno(postforeclosure.notice_provisions.no_30_days_to_cure_claims)) }
  - Edit: postforeclosure.notice_provisions.plaintiff_did_not_inform_amount
    button: |
      The plaintiff did not inform me of the amount of monthly rent it claims and to whom the rent should be paid in violation of G.L. c. 186A, §§3 and 4. : ${ word(yesno(postforeclosure.notice_provisions.plaintiff_did_not_inform_amount)) }
  - Edit: postforeclosure.notice_provisions.plaintiff_did_not_comply_with_requirements
    button: |
      Because the plaintiff did not comply with the notice requirements of G.L. c. 186A, §§3 and 4, this case should be dismissed. : ${ word(yesno(postforeclosure.notice_provisions.plaintiff_did_not_comply_with_requirements)) }
  - Edit: postforeclosure.no_standing
    button: |
      The plaintiff's case should be dismissed because it does not have proper title to the property and therefore it cannot prove a superior right to possession of the property and the foreclosure is void. Wayne Inv. Corp. v. Abbott, 350 Mass. 775 (1966) (title defects can be raised as defense in summary process); G.L. c. 239, §1 (summary process available to plaintiff only if foreclosure carried out according to law). : ${ word(yesno(postforeclosure.no_standing)) }
  - Edit: relief.void_foreclosure
    button: |
      I ask the court to declare the foreclosure void. : ${ word(yesno(relief.void_foreclosure)) }
  - Edit: subsidy_type
    button: |
      What type of subsidy do you have?
       : ${ subsidy_type }
  - Edit: subsidized_housing.pha_pays_rent
    button: |
      A portion of my rent is paid for by a public housing authority. : ${ word(yesno(subsidized_housing.pha_pays_rent)) }
  - Edit: subsidized_housing.stopped_payment
    button: |
      The public housing authority stopped payment to the landlord due to bad conditions. : ${ word(yesno(subsidized_housing.stopped_payment)) }
  - Edit: subsidized_housing.improper_rent_calculation
    button: |
      My landlord or the housing authority improperly calculated my rent share. : ${ word(yesno(subsidized_housing.improper_rent_calculation)) }
  - Edit: subsidized_housing.landlord_overcharged
    button: |
      My landlord charged me more rent than allowed by the housing authority (side payments). : ${ word(yesno(subsidized_housing.landlord_overcharged)) }
  - Edit: subsidized_housing.no_proper_termination
    button: |
      My landlord failed to follow the rules for my subsidy program. : ${ subsidized_housing.no_proper_termination }
  - Edit: subsidized_housing.no_just_cause
    button: |
      My landlord does not have good cause to evict me. : ${ subsidized_housing.no_just_cause }
  - Edit: subsidized_housing.no_ntq_to_agency
    button: |
      The landlord did not send a copy of the notice to quit to my housing authority at the same time as they sent it to me. : ${ subsidized_housing.no_ntq_to_agency }
  - Edit: subsidized_housing.no_hearing_or_conference
    button: |
      I was never offered a chance to discuss the eviction with my landlord in a "private conference" or "grievance hearing". : ${ subsidized_housing.no_hearing_or_conference }
  - Edit: subsidized_housing.vawa
    button: |
      I have a defense under the Violence Against Women Act. : ${ subsidized_housing.vawa }
  - Edit: retaliation.is_retaliated
    button: |
      Retaliation
       : ${ word(yesno(retaliation.is_retaliated)) }
  - Edit: retaliation.withheld_rent
    button: |
      I withheld rent because of bad conditions. : ${ word(yesno(retaliation.withheld_rent)) }
  - Edit: retaliation.badconditions_to_landlord
    button: |
      I reported bad conditions in writing to the landlord. : ${ word(yesno(retaliation.badconditions_to_landlord)) }
  - Edit: retaliation.badconditions_to_agency
    button: |
      I reported bad conditions orally or in writing to a public agency. : ${ word(yesno(retaliation.badconditions_to_agency)) }
  - Edit: retaliation.tenant_union
    button: |
      I am a member of a tenants union or participated in tenant organizing meetings. : ${ word(yesno(retaliation.tenant_union)) }
  - Edit: retaliation.brought_claim
    button: |
      I sued my landlord or brought a claim against my landlord. : ${ word(yesno(retaliation.brought_claim)) }
  - Edit: retaliation.protection_or_prevention_order
    button: |
      I or someone in my household took steps to obtain a protection order (G.L. c. 209A) or a harassment prevention order (G.L. c. 258E). : ${ word(yesno(retaliation.protection_or_prevention_order)) }
  - Edit: retaliation.domestic_violence
    button: |
      I or someone in my household reported an incident of domestic violance, rape, sexual assault or stalking to law enforcement, or report a violation of a protection or harassment prevention order. : ${ word(yesno(retaliation.domestic_violence)) }
  - Edit: retaliation.survivor_rights
    button: |
      I am a survivor of abuse, sexual assault, rape or stalking, and my landlord is evicting me for breaking my lease or changing my locks for safety reasons. : ${ word(yesno(retaliation.survivor_rights)) }
  - Edit: show_retaliation_other
    button: |
      Other : ${ word(yesno(show_retaliation_other)) }
  - Edit: retaliation.other
    button: |
      Other : ${ retaliation.other }
  - Edit: retaliation.within_6_months
    button: |
      One or more of the above happened in the last 6 months. : ${ retaliation.within_6_months }
  - Edit: tenant.is_discriminated
    button: |
      Protected classes and discrimination : ${ word(yesno(tenant.is_discriminated)) }
  - Edit: discrimination.protected_classes
    button: |
      Select the protected class that you believe is the reason for your landlord's discrimination. Select if the class applies to you or someone else in your family. : ${ discrimination.protected_classes }
  - Edit: discrimination.show_other
    button: |
      Other : ${ word(yesno(discrimination.show_other)) }
  - Edit: discrimination.other
    button: |
      Other: : ${ discrimination.other }
  - Edit: disability.request_reasonable_accommodation
    button: |
      Discrimination on basis of disability
       : ${ word(yesno(disability.request_reasonable_accommodation)) }
  - Edit: discrimination.sexual_harassment.pressured_sexual_favors
    button: |
      My landlord asked/pressured me or someone I live with for sexual favors. : ${ word(yesno(discrimination.sexual_harassment.pressured_sexual_favors)) }
  - Edit: discrimination.sexual_harassment.tenancy_terms_changed
    button: |
      My landlord changed the terms of my tenancy because of my response to harassment. : ${ word(yesno(discrimination.sexual_harassment.tenancy_terms_changed)) }
  - Edit: discrimination.sexual_harassment.unsafe_or_uncomfortable
    button: |
      The harassment made me feel unsafe or uncomfortable. : ${ word(yesno(discrimination.sexual_harassment.unsafe_or_uncomfortable)) }
  - Edit: consumer_protection.late_fees
    button: |
      I was charged illegal late fees (unreasonably high, or before rent was 30 days late). : ${ word(yesno(consumer_protection.late_fees)) }
  - Edit: consumer_protection.nonagreed_rent
    button: |
      I was charged an amount of rent that I never agreed to pay. : ${ word(yesno(consumer_protection.nonagreed_rent)) }
  - Edit: consumer_protection.unlawful_court_fees
    button: |
      I was charged court fees or constable fees unlawfully. : ${ word(yesno(consumer_protection.unlawful_court_fees)) }
  - Edit: consumer_protection.unlawful_lease_terms
    button: |
      There are unlawful terms in my lease. : ${ word(yesno(consumer_protection.unlawful_lease_terms)) }
  - Edit: consumer_protection.other
    button: |
      Other : ${ word(yesno(consumer_protection.other)) }
  - Edit: consumer_protection.other_reason
    button: |
      Other violation : ${ consumer_protection.other_reason }
  - Edit: security_deposit.amount
    button: |
      Amount of security deposit : ${ security_deposit.amount }
  - Edit: security_deposit.violations
    button: |
      Violations : ${ security_deposit.violations.true_values() }
  - Edit: last_months_rent.amount
    button: |
      Amount of your prepaid last month's rent : ${ last_months_rent.amount }
  - Edit: last_months_rent.to_whom
    button: |
      Was the payment to your current or former landlord? : ${ last_months_rent.to_whom }
  - Edit: last_months_rent.over_a_year
    button: |
      Have you lived in the apartment for longer than 1 year? : ${ last_months_rent.over_a_year }
  - Edit: last_months_rent.paid_interest
    button: |
      Did your landlord pay you interest each year for your prepaid rent? : ${ last_months_rent.paid_interest }
  - Edit: bqe.locked_out
    button: |
      ${landlord.name} has tried to lock me out. : ${ word(yesno(bqe.locked_out)) }
  - Edit: bqe.entered_without_permission
    button: |
      ${landlord.name} or an employee has entered my home without permission or without advance notice. : ${ word(yesno(bqe.entered_without_permission)) }
  - Edit: claims.harassment
    button: |
      ${landlord.name} or their employee has sexually harassed me. : ${ word(yesno(claims.harassment)) }
  - Edit: claims.utilities
    button: |
      I pay for one or more utilities. : ${ word(yesno(claims.utilities)) }
  - Edit: is_condo_conversion
    button: |
      ${tenant.address.address} was recently converted into a condominium or cooperative, or will be converted soon. : ${ word(yesno(is_condo_conversion)) }
  - Edit: paid_deposit
    button: |
      I paid a security deposit. : ${ word(yesno(paid_deposit)) }
  - Edit: paid_lmr
    button: |
      I pre-paid last month's rent when I first moved in. : ${ word(yesno(paid_lmr)) }
  - Edit: covid_cares_has_federal_mortgage
    button: |
      My landlord has a federally funded mortgage or I live in federally assisted property that is covered by the CARES act : ${ word(yesno(covid_cares_has_federal_mortgage)) }
  - Edit: covid_cares_mortgage_in_forbearance
    button: |
      The mortgage is in forbearance : ${ word(yesno(covid_cares_mortgage_in_forbearance)) }
  - Edit: delay_in_raft
    button: |
      I have asked for help from RAFT or another rental help program and my rent is late because RAFT has not paid my rent yet. : ${ word(yesno(delay_in_raft)) }
  - Edit: initial_defense.no_257_notice
    button: |
      My landlord did not send a copy of the Form to Accompany the Residential Notice to Quit, commonly referred to as the 257 form : ${ word(yesno(initial_defense.no_257_notice)) }
  - Edit: ls_case_id
    button: |
      Case number : ${ ls_case_id }
  - Edit: needs_time_because
    button: |
      Explain in your own words why you need more time to move. : ${ needs_time_because }
  
  - note: |
      <h2 class="h4 mt-4">Discovery</h2>
  - label: Edit
    field: tenant_review_discovery
    button: |
      You ${ 'wanted' if tenant_review_discovery else 'did not want'} to 
      customize the discovery.
  - label: Edit
    field: interrogatory_questions
    button: |
      ${ ints.count_checked() } interrogatories are already selected.
  - label: Edit
    field: drq_questions
    button: |
      You requested ${ drq.count_checked() } kinds of documents.

  - note: |
      <h2 class="h4 mt-4">Getting the documents served</h2>
  - Edit: method_of_service
    button: |
      Delivery method : ${ method_of_service }
  - Edit: service_date
    button: |
      Date of delivery : ${ service_date }

  - note: |
      <h2 class="h4 mt-4">Signature</h2>
  - Edit: x.signature
    button: |
      Your signature : ${ x.signature }
---
table: additional_tenants.review_table
rows: additional_tenants
columns:
  - Name: |
      row_item
  - Address: |
      row_item.address.on_one_line()  
edit:
  - name.first
---
continue button field: additional_tenants.revisit
question: |
  Additional tenants
subquestion: |
  ${ additional_tenants.review_table }
  ${ additional_tenants.add_action() }
  
    
    